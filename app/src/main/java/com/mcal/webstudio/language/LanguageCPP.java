package com.mcal.webstudio.language;

import java.util.ArrayList;

public class LanguageCPP {
    public static ArrayList<String> cpp() throws Exception {
        ArrayList<String> list = new ArrayList<>();
        list.add("void");
        list.add("bool");
        list.add("char");
        list.add("double");
        list.add("float");
        list.add("int");
        list.add("long");
        list.add("short");
        list.add("void");
        list.add("wchar_t");
        list.add("auto");
        list.add("const");
        list.add("extern");
        list.add("mutable");
        list.add("register");
        list.add("static");
        list.add("volatile");
        list.add("signed");
        list.add("unsigned");
        list.add("true");
        list.add("false");
        list.add("new");
        list.add("delete");
        list.add("sizeof");
        list.add("typedef");
        list.add("typeid");
        list.add("typename");
        list.add("const_cast");
        list.add("dynamic_cast");
        list.add("reinterpret_cast");
        list.add("static_cast");
        list.add("class");
        list.add("enum");
        list.add("explicit");
        list.add("operator");
        list.add("struct");
        list.add("template");
        list.add("union");
        list.add("virtual");
        list.add("private");
        list.add("protected");
        list.add("public");
        list.add("friend");
        list.add("this");
        list.add("break");
        list.add("case");
        list.add("catch");
        list.add("continue");
        list.add("default");
        list.add("do");
        list.add("else");
        list.add("for");
        list.add("goto");
        list.add("if");
        list.add("return");
        list.add("switch");
        list.add("throw");
        list.add("try");
        list.add("while");
        list.add("export");
        list.add("namespace");
        list.add("using");
        list.add("asm");
        list.add("inline");
        list.add("restrict");
        return list;
    }
}